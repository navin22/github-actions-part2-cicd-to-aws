
name: CI1
env:
  BUCKET_NAME : "neha-bucket123"
  APP_NAME : "neha-app"
  ENV_NAME : "Nehaapp-env"
  PACKAGE_NAME : "neha-${{ github.sha }}.zip"
  AWS_REGION : "us-east-2"

on:
  push:
    branches: [ master ]

jobs:
  S3PackageUpload:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Create zip
        run: zip -r ${{ env.PACKAGE_NAME }} ./ -x "*.git"
      
      # Get credentials
      - name: get temp credentials
        run: echo ::set-output name=CREDENTIALS::$(aws sts assume-role-with-web-identity  --role-arn 'arn:aws:iam::151347512159:role/S3FullAccessV3-OIDCDemo' --role-session-name 'samplerolesession' --web-identity-token 'eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FudXBhZGgubmdyb2suaW8iLCJpYXQiOjE2MjM5MzMyMDgsImV4cCI6MTYyNDExNzExMCwiYXVkIjoiZ2hhY3Rpb25zIiwic3ViIjoicmVwbzpuYXZpbjIyL2dpdGh1Yi1hY3Rpb25zLXBhcnQyLWNpY2QtdG8tYXdzOmJyYW5jaDptYWluIn0.JWias1FXQXxBLR6uAxD44aAuElJTBFzUd7Ca7Pg1DvndpTeOm_fnz_m5cG7-8YwM6tRxP9My7n1VTZ3T-6xjzZFqv0k7sq_MnLr2Ot9aO36igIjpA9gRsoyMjKbIkySqVlK5SYXrnMCAGyiaX96a-Q7IOMyw7AP50SmS0auksYlYhD-WisXxGjR_FzcJysGgVkZmIOmsbJ9BNsz_6Zn1gohgOXY7ImKYJl8LwyFwB_LPIdaqL5F78Tr31EkByWy2oSfcJvImx5uLnJnpL3cNPJ7Orus9_eeYctOjvwhrw0K1OebL-1kLcL0bkiN6LhOyyaLcOLexIdNx62g1dYvraw' --query Credentials)
        id: credentials
        
      - name: get access ID
        run: echo ::set-output name=ACCESSID::$(echo '${{ steps.credentials.outputs.CREDENTIALS }}' | jq -rc '.AccessKeyId')
        id: accessid
        
      - name: get access key
        run: echo ::set-output name=ACCESSKEY::$(echo '${{ steps.credentials.outputs.CREDENTIALS }}' | jq -rc '.SecretAccessKey')
        id: accesskey
        
      - name: get session token
        run: echo ::set-output name=SESSIONTOKEN::$(echo '${{ steps.credentials.outputs.CREDENTIALS }}' | jq -rc '.SessionToken')
        id: sessiontoken
      
      # Runs a set of commands using the runners shell
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ steps.accessid.outputs.ACCESSID }}
          aws-secret-access-key: ${{ steps.accesskey.outputs.ACCESSKEY }}
          aws-session-token: ${{ steps.sessiontoken.outputs.SESSIONTOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name:  Copy package to s3
        run: aws s3 cp ${{ env.PACKAGE_NAME }} s3://${{ env.BUCKET_NAME }}/

  ElasticBeanStalkDeploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: S3PackageUpload

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: get ID token
        run: |
          big_json=$(curl -s -X POST -H "Content-Type:application/x-www-form-urlencoded" -d 'grant_type=password&client_id=ghactions&username=demorepoadmin&password=HelloWorld123#&scope=openid&client_secret=HelloWorld123#' 'https://ghactionsoidc.azurewebsites.net/connect/token/')
          big_json="${big_json//'%'/'%25'}"
          big_json="${big_json//$'\n'/'%0A'}"
          big_json="${big_json//$'\r'/'%0D'}"
          echo "::set-output name=big_json::$big_json"
        id: tokenid
      
      # Get credentials
      - name: get temp credentials
        run: echo ::set-output name=CREDENTIALS::$(aws sts assume-role-with-web-identity  --role-arn 'arn:aws:iam::151347512159:role/AdminElasticBeanStalkV3-OIDCDemo' --role-session-name 'samplerolesession' --web-identity-token ${{fromJson(steps.tokenid.outputs.big_json).id_token}} --query Credentials)
        id: credentials
        
      - name: get access ID
        run: echo ::set-output name=ACCESSID::$(echo '${{ steps.credentials.outputs.CREDENTIALS }}' | jq -rc '.AccessKeyId')
        id: accessid
        
      - name: get access key
        run: echo ::set-output name=ACCESSKEY::$(echo '${{ steps.credentials.outputs.CREDENTIALS }}' | jq -rc '.SecretAccessKey')
        id: accesskey
        
      - name: get session token
        run: echo ::set-output name=SESSIONTOKEN::$(echo '${{ steps.credentials.outputs.CREDENTIALS }}' | jq -rc '.SessionToken')
        id: sessiontoken
      # Runs a set of commands using the runners shell
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ steps.accessid.outputs.ACCESSID }}
          aws-secret-access-key: ${{ steps.accesskey.outputs.ACCESSKEY }}
          aws-session-token: ${{ steps.sessiontoken.outputs.SESSIONTOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create new ElasticBeanstalk Application Version
        run : |
            aws elasticbeanstalk create-application-version \
            --application-name ${{ env.APP_NAME }} \
            --source-bundle S3Bucket="${{ env.BUCKET_NAME }}",S3Key="${{ env.PACKAGE_NAME }}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "CommitSHA-${{ github.sha }}"

      - name: Deploy our new Application Version
        run : aws elasticbeanstalk update-environment --environment-name ${{ env.ENV_NAME }} --version-label "Ver-${{ github.sha }}"
